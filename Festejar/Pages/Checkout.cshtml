@page
@model Festejar.Pages.CheckoutModel
@{
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
	<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
</head>
<body>
	<div class="breadcrumb-area breadcrumb-padding">
		<div class="container custom-container-one">
			<div class="row">
				<div class="col-lg-12">
					<div class="breadcrumb-contents">
						<h4 class="breadcrumb-contents-title"> Detalhes da reserva </h4>
						<ul class="breadcrumb-contents-list list-style-none">
							<li class="breadcrumb-contents-list-item"> <a asp-page="Index" class="breadcrumb-contents-list-item-link"> Home </a> </li>
							<li class="breadcrumb-contents-list-item"> Reserva </li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
	<section class="Checkout-area section-bg-2 pat-100 pab-100">
		<div class="container">
			<div class="row g-4">
				<div class="col-xl-8 col-lg-7">
					
						<div class="checkout-wrapper">						
							<div class="checkout-single bg-white radius-10">
								<h4 class="checkout-title"> Pagamento </h4>
								<form method="post">
								<div class="checkout-contents mt-4">
									<div class="custom-radio custom-radio-inline">
										<div class="custom-radio-single active">
											<input class="radio-input" type="radio" id="radio1" name="PaymentType" value="@((int)CheckoutModel.EpaymentType.CartaoCredito)" checked="checked">
											<i class='bx bx-credit-card'></i>
											<label for="radio1"> Cartão de Crédito</label>
										</div>
										<div class="custom-radio-single">
											<input class="radio-input" type="radio" name="PaymentType" id="radio2" value="@((int)CheckoutModel.EpaymentType.Pix)">
											<label for="radio2"> <i class="fa-brands fa-pix" style="color: #4DB6AC;"></i> Pix</label>
										</div>
									</div>
									<div class="checkout-form custom-form">

										<div class="single-input mt-4">
											<label class="label-title"> Nome impresso no cartão </label>
											<input asp-for="PagamentoCartaoCredito.NomeImpressoCartao" type="text" class="form-control" aria-required="true" placeholder="Nome impresso no cartão" />
											<span asp-validation-for="PagamentoCartaoCredito.NomeImpressoCartao" class="text-danger"></span>
										</div>
										<div class="single-input mt-4">
											<label class="label-title"> Número do cartão </label>
											<input asp-for="PagamentoCartaoCredito.NumeroCartao" class="form-control" aria-required="true" placeholder="Número do cartão" />
											<span asp-validation-for="PagamentoCartaoCredito.NumeroCartao" class="text-danger"></span>
											<div class="input-icon"> <i class='bx bx-credit-card'></i> </div>
										</div>
										<div class="input-flex-item">
											<div class="single-input mt-4">
												<label for="validadeCartao" class="label-title">Data de validade (Mês/Ano):</label>
												<input asp-for="PagamentoCartaoCredito.ValidadeCartao" class="form-control input-padding-left" type="text" id="validadeCartao" placeholder="MM/AAAA" maxlength="7">
												<span asp-validation-for="PagamentoCartaoCredito.ValidadeCartao" class="text-danger"></span>
												<div class="input-icon"> <i class='bx bx-calendar'></i> </div>
											</div>
											<div class="single-input mt-4">
												<label class="label-title"> CVV/CVC </label>
												<input asp-for="PagamentoCartaoCredito.Cvv" class="form-control input-padding-left" type="number" placeholder="Código de segurança" maxlength="3">					
												<span asp-validation-for="PagamentoCartaoCredito.Cvv" class="text-danger"></span>
												<div class="input-icon"> <i class='bx bxs-lock'></i> </div>
											</div>
										</div>
										<div class="lock-contents mt-4">
											<div class="lock-contents-icon">
												<i class='bx bxs-lock-alt'></i>
											</div>
											<span class="lock-contents-para"> As informações são criptografadas com SSL de 256 bits </span>
										</div>
										<div class="guaranty-cancellation radius-10 mt-4">
											<h4 class="guaranty-cancellation-title"> Guarantee &amp; Cancellation </h4>
											<p class="guaranty-cancellation-para"> Cancel 12 hours before checking-in time for a Free Cancellation. </p>
										</div>
										<div class="checkbox-wrap mt-4">
											<div class="checkbox-inline">
												<input class="check-input" type="checkbox" name="aceitaTermo" id="agree" value="true">
												<input type="hidden" name="aceitaTermo" value="false">
												<label class="checkbox-label" for="agree"> I agree to the <a href="javascript:void(0)">Terms &amp; Conditions</a> of <a href="javascript:void(0)">Beyond Hotels</a> </label>
											</div>
										</div>
										<div class="btn-wrapper mt-4">
											<input type="hidden" name="dataConfirm" value="@Model.DataReserva" />
											<input type="hidden" name="qntConvidados" value="@Model.qntConvidados" />
											<input type="hidden" name="casaid" value="@Model.Casa_Id" />
											<button href="javascript:void(0)" asp-page-handler="CreateReserva" class="cmn-btn btn-bg-1 btn-small"> Pay &amp; Confirm </button>
										</div>
									</div>
								</div>
							</form>
							</div>
						</div>
					
				</div>
				<div class="col-xl-4 col-lg-5">
					<div class="sticky-top">
						<div class="checkout-widget checkout-widget-padding widget bg-white radius-10">
							<div class="checkout-sidebar">
								<h4 class="checkout-sidebar-title"> Detalhes da reserva </h4>
								<div class="checkout-sidebar-contents">
									<ul class="checkout-flex-list list-style-none checkout-border-top pt-3 mt-3">
										<li class="list"> <span class="regular"> Casa </span> <span class="strong"> @Model.NomeCasa </span> </li>
										<li class="list"> <span class="regular"> Data da reserva </span> <span class="strong"> @Model.DataReserva </span> </li>
										<li class="list"> <span class="regular"> Quantidade convidados </span> <span class="strong"> @Model.qntConvidados </span> </li>
									</ul>
								</div>
							</div>
						</div>
						<div class="checkout-widget checkout-widget-padding widget bg-white radius-10">
							<div class="checkout-sidebar">
								<h4 class="checkout-sidebar-title"> Fatura </h4>
								<div class="checkout-sidebar-contents">

									<table class="table checkout-flex-list list-style-none checkout-border-top pt-3 mt-3">
										<thead>
											<tr>
												<th scope="col">Itens da reserva</th>
												<th class="text-center" scope="col">Quantidade</th>
												<th class="text-center" scope="col">Preço</th>
											</tr>
										</thead>
										<tbody>
											<tr>
												<td> <span class="regular"> Diária </span></td>
												<td></td>
												<td class="text-center"><span class="strong"> @Model.ValorDiaria </span></td>
											</tr>
											@if (Model.Recurso != null && Model.Quantidade != null && Model.ValorRecurso != null)
											{
												@for (int i = 0; i < Model.Recurso.Length; i++)
												{
													<tr>
														<td class="list"> @Model.Recurso[i]</td>
														<td class="text-center">
															<button type="button" class="btn btn-danger decrement">-</button>
															<input style="width: 30px;" type="text" class="quantity" value="@Model.Quantidade[i]" data-max="@Model.Quantidade[i]" data-valor="@Model.ValorRecurso[i]">
															<button type="button" class="btn btn-danger increment">+</button>
														</td>
														<td class="text-center total-value"> @Model.ValorRecurso[i] </td>
													</tr>

												}
											}

										</tbody>
									</table>
									<ul class="checkout-flex-list list-style-none checkout-border-top pt-3 mt-3">
										<li class="list"> <span class="regular"> Total </span> <span class="strong color-one fs-20"> R$580,00 </span> </li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>

	<script>
		const decrementButtons = document.querySelectorAll('.decrement');
		const incrementButtons = document.querySelectorAll('.increment');
		const quantityInputs = document.querySelectorAll('.quantity');
		const totalValueElements = document.querySelectorAll('.total-value');

		const valorItem = [];
		for (let i = 0; i < quantityInputs.length; i++) {
			valorItem[i] = parseFloat(quantityInputs[i].dataset.valor) / parseFloat(quantityInputs[i].dataset.max);
		}

		decrementButtons.forEach((decrementButtons, index) => {
			decrementButtons.addEventListener('click', () => {
				const currentValue = parseInt(quantityInputs[index].value) || 0;
				if (currentValue > 0) {
					quantityInputs[index].value = currentValue - 1;
					// Atualize o valor do recurso
					var totalValue = parseFloat(totalValueElements[index].textContent.replace('R$ ', ''));
					totalValue -= valorItem[index];
					totalValueElements[index].textContent = 'R$ ' + totalValue.toFixed(2);

				}
			});
		});

		incrementButtons.forEach((incrementButtons, index) => {
			incrementButtons.addEventListener('click', () => {
				const currentValue = parseInt(quantityInputs[index].value) || 0;
				const maxQuantity = parseInt(quantityInputs[index].dataset.max);
				if (currentValue < maxQuantity) {
					quantityInputs[index].value = currentValue + 1;

					// Atualize o valor do recurso
					var totalValue = parseFloat(totalValueElements[index].textContent.replace('R$ ', ''));
					totalValue += valorItem[index];
					totalValueElements[index].textContent = 'R$ ' + totalValue.toFixed(2);
				}
			});
		});

		document.getElementById("validadeCartao").addEventListener("input", function () {
			var inputValue = this.value;

			// Remove caracteres não numéricos
			inputValue = inputValue.replace(/\D/g, '');

			// Insere a barra após os dois primeiros dígitos (mês)
			if (inputValue.length > 2) {
				inputValue = inputValue.substring(0, 2) + '/' + inputValue.substring(2);
			}

			// Atualiza o valor do input
			this.value = inputValue;
		});
	</script>
	@if (!String.IsNullOrEmpty(Model.ErroSwal))
	{
		<script>
			document.addEventListener('DOMContentLoaded', function () {
				Swal.fire({
					icon: 'error',
					title: 'Oops...',
					text: '@Html.Raw(Model.ErroSwal)',
				})
			});
		</script>
	}

@*	<script>
		document.addEventListener('DOMContentLoaded', function () {
			Swal.fire('Olá', 'Este é um teste do SweetAlert', 'error');
		});
	</script>*@



	@*Icone pix*@
	<script src="https://kit.fontawesome.com/c5e63c95f6.js" crossorigin="anonymous"></script>
</body>
</html>
